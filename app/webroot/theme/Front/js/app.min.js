/* App -- dev */function bootstrapAngular() {
    console && console.log("Bootstrapping AngularJS");
    var domElement = document.querySelector("body");
    angular.bootstrap(domElement, [ "app" ]);
}

angular.module("cake", [ "ngResource" ]).controller("cakeCtrl", [ "$scope", "data", function($scope, data) {
    $scope.data = data;
} ]).controller("cakeLoginCtrl", [ "$scope", "cakePHP", "growl", function($scope, cakePHP, growl) {
    $scope.user = {
        name: "Votre Nom Complet",
        email: "votre@email.com",
        message: ""
    }, $scope.sendMessage = function() {
        cakePHP.querypost({
            controller: "users",
            action: "json_login"
        }, {
            user: $scope.message
        }).$promise.then(function(value) {
            value.success ? growl.success("Votre message a bien été envoyé!") : growl.error("Une erreure est survenue, veuillez essayer à nouveau!");
        }, function() {
            growl.error("Le serveur n'a pas répondu, veuillez essayer à nouveau!");
        });
    };
} ]).value("server", {
    url: "http://exemple.com"
}).factory("cakeQuery", [ "$resource", "server", function($resource, server) {
    return $resource(server.url + "json/:custom1/:custom2/:controller/:action/:sort/:direction/:page/:id/:param.json", {
        custom1: "@custom1",
        custom2: "@custom2",
        controller: "@controller",
        action: "@action",
        sort: "@sort",
        direction: "@direction",
        page: "@page",
        id: "@id",
        param: "@param"
    }, {
        queryjsonp: {
            method: "JSONP",
            params: {
                callback: "JSON_CALLBACK"
            },
            callback: "JSON_CALLBACK"
        },
        queryget: {
            method: "GET"
        },
        queryput: {
            method: "PUT"
        },
        querypost: {
            method: "POST"
        },
        querydelete: {
            method: "DELETE"
        }
    });
} ]), angular.module("appDep", []), angular.module("appDep").controller("elementsHeaderCtrl", [ "$scope", "$window", function($scope, $window) {
    $scope.navCollapsed = !0, $scope.navClick = function() {
        $window.innerWidth < 678 && ($scope.navCollapsed = !0);
    };
} ]), angular.module("appDep").controller("pitchesListCtrl", [ "$scope", "data", function() {} ]), 
angular.module("appDep").controller("usersLoginCtrl", [ "$scope", "cakeQuery", "growl", function($scope, cakeQuery, growl) {
    $scope.user = {
        email: "votre@email.com",
        password: "",
        message: ""
    }, $scope.login = function() {
        cakeQuery.querypost({
            controller: "users",
            action: "login"
        }, {
            User: $scope.user
        }).$promise.then(function(value) {
            value.success ? growl.success("Votre message a bien été envoyé!") : growl.error("Une erreure est survenue, veuillez essayer à nouveau!");
        }, function() {
            growl.error("Le serveur n'a pas répondu, veuillez essayer à nouveau!");
        });
    };
} ]), angular.module("appDep").directive("imgResize", function() {
    function link(scope, element, attrs) {
        attrs.$set("src", attrs.imgResize);
    }
    return {
        restrict: "A",
        scope: {},
        link: link
    };
}), angular.module("appDep").filter("date", function() {
    return function(dateString) {
        var dateObject = new Date(dateString);
        return dateObject.getDay() + "." + dateObject.getMonth() + "." + dateObject.getFullYear();
    };
}), angular.module("appDep").filter("nl2br", function($sce) {
    return function(msg, is_xhtml) {
        var is_xhtml = is_xhtml || !0, breakTag = is_xhtml ? "<br />" : "<br>", msg = (msg + "").replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g, "$1" + breakTag + "$2");
        return $sce.trustAsHtml(msg);
    };
}), angular.module("appDep").filter("slug", function() {
    return function(input) {
        return input ? input.toLowerCase().replace(/[^a-z\-]/g, "-").replace(" ", "-") : void 0;
    };
}), angular.module("app", [ "ui.router", "ui.bootstrap", "ngResource", "angular-growl", "cake", "appDep" ]).value("server", {
    url: ""
}).value("headers", {
    Authorization: "BASIC token"
}).controller("mainCtrl", [ "$scope", "headers", "$http", function($scope, headers) {
    headers = {
        Authorization: "BASIC youpi"
    }, $scope.loading = !1, $scope.error = !1, $scope.$on("$stateChangeStart", function(event, toState) {
        toState.resolve && ($scope.loading = !0, $scope.error = !1);
    }), $scope.$on("$stateChangeSuccess", function(event, toState) {
        toState.resolve;
    }), $scope.$on("$stateNotFound", function(event, toState) {
        toState.resolve && ($scope.loading = !1, $scope.error = !0);
    }), $scope.$on("$stateChangeError", function(event, toState) {
        toState.resolve && ($scope.loading = !1, $scope.error = !0);
    });
} ]).run([ "$rootScope", "$state", "$stateParams", function($rootScope, $state, $stateParams) {
    $rootScope.$state = $state, $rootScope.$stateParams = $stateParams;
} ]).config([ "$locationProvider", "$stateProvider", "$urlRouterProvider", function($locationProvider, $stateProvider, $urlRouterProvider) {
    $locationProvider.html5Mode(!0), $locationProvider.hashPrefix("!"), $stateProvider.state("home", {
        url: "/app/home",
        templateUrl: "theme/Front/partials/pitches/pitches_list.html",
        data: {
            pageTitle: "PPC : Home"
        },
        resolve: {
            cakeQuery: "cakeQuery",
            data: function(cakeQuery) {
                return cakeQuery.queryget({
                    controller: "pitches",
                    action: "pitches_list"
                }).$promise;
            }
        },
        controller: "pitchesListCtrl",
        controllerAs: "controller"
    }).state("login", {
        url: "/app/login",
        templateUrl: "theme/Front/partials/users/login.html",
        data: {
            pageTitle: "PPC : Login"
        },
        controller: "usersLoginCtrl",
        controllerAs: "controller"
    }), $urlRouterProvider.otherwise("/app/home");
} ]), -1 === document.URL.indexOf("http://") && -1 === document.URL.indexOf("https://") ? (console && console.log("URL: Running in Cordova/PhoneGap"), 
document.addEventListener("deviceready", bootstrapAngular, !1)) : (console && console.log("URL: Running in browser"), 
bootstrapAngular());